{
	"info": {
		"_postman_id": "28769912-9549-42dc-87e8-ca1c426db89b",
		"name": "BPR",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Register user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"user2\",\r\n    \"email\": \"email2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/user/register",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"user",
								"register"
							]
						},
						"description": "Register a user after creating account on firebase\r\n\r\n**asdasdasdasdas**\r\n\r\n`asdasdasd`"
					},
					"response": []
				},
				{
					"name": "Search users by name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/user/search/user",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"user",
								"search",
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/user/123test123",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"user",
								"123test123"
							]
						},
						"description": "/user/:userId\n\nGet user profile data."
					},
					"response": []
				},
				{
					"name": "Get my profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/user/me",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"user",
								"me"
							]
						},
						"description": "/user/me\n\nGet my user profile data."
					},
					"response": []
				},
				{
					"name": "Toggle follow",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/user/followUnfollow/324",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"user",
								"followUnfollow",
								"324"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change profile image",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "image",
									"type": "file",
									"src": "/C:/Users/Bruger/Pictures/New folder/5fb7f93c4824b023176fe90f.jpg"
								}
							]
						},
						"url": {
							"raw": "{{apiUrl}}/user/profileImage",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"user",
								"profileImage"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update profile",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"new name1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/user",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"user"
							]
						},
						"description": "Update user profile data. See body for the fields that you can change."
					},
					"response": []
				},
				{
					"name": "Delete profile image",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/user/profileImage",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"user",
								"profileImage"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user profile",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/user",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"user"
							]
						},
						"description": "Completely delete the profile of the user. It is a good idea to sign out the user before calling this route, as the user account will be deleted from Firebase by the server."
					},
					"response": []
				}
			]
		},
		{
			"name": "Group",
			"item": [
				{
					"name": "Create group",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"name1\",\r\n    \"users\": [\"someUserId1\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/group",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"group"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update group",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"name1\",\r\n    \"users\": [\"someUserId1\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/group/609fceb251d86e288c908981",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"group",
								"609fceb251d86e288c908981"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all my groups (only for display)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/group/all",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"group",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete group",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/group/delete/6048887b0b11c50618c10729",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"group",
								"delete",
								"6048887b0b11c50618c10729"
							]
						},
						"description": "asfasgfdgfdgdfg"
					},
					"response": []
				},
				{
					"name": "Get group by id (full group details)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"name\",\r\n    \"users\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/group/604889f69c1913359426600c",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"group",
								"604889f69c1913359426600c"
							]
						}
					},
					"response": []
				},
				{
					"name": "Leave group",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/group/leaveGroup/60a0b3ad4107a4356c92814a",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"group",
								"leaveGroup",
								"60a0b3ad4107a4356c92814a"
							]
						},
						"description": "/group/leaveGroup/`groupId`\n\nThe user can leave a group to which he/she was added."
					},
					"response": []
				}
			]
		},
		{
			"name": "Time capsule",
			"item": [
				{
					"name": "Create time capsule",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "capsule name",
									"type": "text"
								},
								{
									"key": "description",
									"value": "capsule description",
									"type": "text"
								},
								{
									"key": "openDate",
									"value": "2022-03-20T12:55:26.075Z",
									"type": "text"
								},
								{
									"key": "isPrivate",
									"value": "false",
									"type": "text"
								},
								{
									"key": "tags[]",
									"value": "tag1",
									"type": "text"
								},
								{
									"key": "tags[]",
									"value": "tag2",
									"type": "text"
								},
								{
									"key": "tags[]",
									"value": "tag3",
									"type": "text",
									"disabled": true
								},
								{
									"key": "allowedUsers[]",
									"value": "userId1",
									"type": "text"
								},
								{
									"key": "allowedUsers[]",
									"value": "userId2",
									"type": "text"
								},
								{
									"key": "allowedGroups[]",
									"value": "groupId1",
									"type": "text"
								},
								{
									"key": "allowedGroups[]",
									"value": "groupId2",
									"type": "text"
								},
								{
									"key": "lat",
									"value": "47.123",
									"type": "text"
								},
								{
									"key": "lon",
									"value": "20.123",
									"type": "text"
								},
								{
									"key": "backgroundType",
									"value": "0",
									"type": "text"
								},
								{
									"key": "contents",
									"type": "file",
									"src": "/C:/Users/Bruger/Pictures/New folder/5fb4e34a2ba65934fcda3891.jpg"
								},
								{
									"key": "contents",
									"type": "file",
									"src": "/C:/Users/Bruger/Pictures/New folder/5fb7f93c4824b023176fe90f.jpg"
								}
							]
						},
						"url": {
							"raw": "{{apiUrl}}/timeCapsule",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"timeCapsule"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get my time capsules",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/timeCapsule/my",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"timeCapsule",
								"my"
							]
						},
						"description": "If the time capsule is opened, the field `isOpened` is true, and the `contents` array is present.\r\n\r\nIf the time capsule is closed, the field `isOpened` is false, and the `contents` array is not present."
					},
					"response": []
				},
				{
					"name": "Get feed for authneticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/timeCapsule/feed?page=0",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"timeCapsule",
								"feed"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								}
							]
						},
						"description": "Use ?page=`pageNumber` for pagination or infinite scroll. There are 20 results per page."
					},
					"response": []
				},
				{
					"name": "Get feed for public user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/timeCapsule/publicFeed?page=0",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"timeCapsule",
								"publicFeed"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								}
							]
						},
						"description": "Use ?page=`pageNumber` for pagination or infinite scroll. There are 20 results per page."
					},
					"response": []
				},
				{
					"name": "Edit accessibility permissions",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"My time capsule name\",\r\n    \"allowedUsers\": [\r\n        \"324\",\r\n        \"123test123\"\r\n    ],\r\n    \"allowedGroups\": [\r\n        \"ce e asta? :))\",\r\n        \"un grup\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/timeCapsule/605caf2cd090f13eb01b6d5f",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"timeCapsule",
								"605caf2cd090f13eb01b6d5f"
							]
						}
					},
					"response": []
				},
				{
					"name": "Leave allowed users",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/timeCapsule/leaveAllowedUsers/60a0b4f7ed3a5a2c10750db7",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"timeCapsule",
								"leaveAllowedUsers",
								"60a0b4f7ed3a5a2c10750db7"
							]
						},
						"description": "/timeCapsule/leaveAllowedUsers/`capsuleId`\n\nThe user can leave the list of allowed users to which he/she was added."
					},
					"response": []
				},
				{
					"name": "Delete time capsule",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/timeCapsule/delete/:id",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"timeCapsule",
								"delete",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get  timeCapsule by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/timeCapsule/:id",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"timeCapsule",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Toggle subscription",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/timeCapsule/60649f7ba578ec5fccd12b84/toggleSubscription",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"timeCapsule",
								"60649f7ba578ec5fccd12b84",
								"toggleSubscription"
							]
						},
						"description": "/timeCapsule/`capsuleId`/toggleSubscription\n\nToggle subscription to a time capsule."
					},
					"response": []
				},
				{
					"name": "React to time capsule",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/timeCapsule/60672e29eb7fe5b28812838e/react/remove",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"timeCapsule",
								"60672e29eb7fe5b28812838e",
								"react",
								"remove"
							]
						},
						"description": "/timeCapsule/`capsuleId`/react/`reaction`\n\nReact or remove reaction to a time capsule.\n\n`reaction` parameter can have the following values: `remove` (to remove your reaction from this time capsule), `like`, `love`, `laugh`, `compassion`, `startled`, `crying`, `sad`"
					},
					"response": []
				},
				{
					"name": "GetSubscribedCapsules",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/timeCapsule/subscribed",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"timeCapsule",
								"subscribed"
							]
						}
					},
					"response": []
				},
				{
					"name": "SearchCapsules",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"keyword\": \"classmates\",\r\n   \"search_in_tags\" : true,\r\n   \"search_in_name\" : true,\r\n   \"search_in_description\" : true,\r\n   \"contents\": \"image/png\",\r\n   \"open_closed\": \"open\",\r\n   \"opening_date_from\": \"2021-04-03T10:39:22.034Z\",\r\n   \"opening_date_to\": \"2030-04-14T10:39:22.034Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/timeCapsule/search",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"timeCapsule",
								"search"
							]
						},
						"description": "\"open_closed\" can have the value \"open\" or \"closed\"\r\n\"opening_date_from\" and \"opening_date_to\" have the format: e.g. \"2021-04-09T10:39:22.034Z\"\r\n\"contents\" e.g. \"image/jpeg\" or \"image/png\"\r\n\"tags\" is an array of strings like this:\r\n   \"tags\": [\r\n       \"me\",\r\n       \"you\",\r\n       \"etc\"], \r\nOr it can be a one value array \"tags\": [\"text\"],"
					},
					"response": []
				},
				{
					"name": "Get user's time capsules",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/timeCapsule/user/test123124242",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"timeCapsule",
								"user",
								"test123124242"
							]
						},
						"description": "/timeCapsule/user/`userId`\n\nGet all the time capsules created by a user. This route also filters and hides time capsules to which you don't have access (for example if they are not shared with you, or if they are not shared with a group in which you are present)"
					},
					"response": []
				}
			]
		},
		{
			"name": "Tag",
			"item": [
				{
					"name": "Get tag suggestions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/tag/suggestions/ta",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tag",
								"suggestions",
								"ta"
							]
						},
						"description": "{{apiUrl}}/tag/suggestions/`query`\r\n\r\nGets tag suggestions. The response is limited to 20 results."
					},
					"response": []
				},
				{
					"name": "Get all tags",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/tag/all",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tag",
								"all"
							]
						},
						"description": "Gets all tags. Preferably not to be used in the app, only for testing purposes :)"
					},
					"response": []
				},
				{
					"name": "After register tag suggestions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/tag/registerSuggestions",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tag",
								"registerSuggestions"
							]
						},
						"description": "Get tag suggestions that are displayed when the users registers."
					},
					"response": []
				},
				{
					"name": "Save preferred tags",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"tags\": [\r\n        \"tag1\",\r\n        \"time machine\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/tag/saveTags",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tag",
								"saveTags"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notifications",
			"item": [
				{
					"name": "Get my notifications",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/notification?page=0",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"notification"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "userId2",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "apiUrl",
			"value": "http://localhost:8080"
		}
	]
}