{
	"info": {
		"_postman_id": "5ef57586-58dc-4b8f-8a66-9cc33a25e7e5",
		"name": "BPR",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Register user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Name\",\r\n    \"email\": \"Email\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/user/register",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"user",
								"register"
							]
						},
						"description": "Register a user after creating account on firebase\r\n\r\n**asdasdasdasdas**\r\n\r\n`asdasdasd`"
					},
					"response": []
				},
				{
					"name": "Search users by name",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Name\",\r\n    \"email\": \"Email\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/user/search/user",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"user",
								"search",
								"user"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Group",
			"item": [
				{
					"name": "Create group",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"name1\",\r\n    \"users\": [\"someUserId1\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/group",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"group"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update group",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"name3\",\r\n    \"users\": [\"someUserId1\", \"someUserId1\"]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/group/60488ca962b27f3e40118d71",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"group",
								"60488ca962b27f3e40118d71"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all my groups (only for display)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/group/all",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"group",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete group",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/group/delete/6048887b0b11c50618c10729",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"group",
								"delete",
								"6048887b0b11c50618c10729"
							]
						},
						"description": "asfasgfdgfdgdfg"
					},
					"response": []
				},
				{
					"name": "Get group by id (full group details)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"name\",\r\n    \"users\": []\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/group/604889f69c1913359426600c",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"group",
								"604889f69c1913359426600c"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Time capsule",
			"item": [
				{
					"name": "Create time capsule",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "capsule name",
									"type": "text"
								},
								{
									"key": "description",
									"value": "capsule description",
									"type": "text"
								},
								{
									"key": "openDate",
									"value": "2022-03-20T12:55:26.075Z",
									"type": "text"
								},
								{
									"key": "isPrivate",
									"value": "false",
									"type": "text"
								},
								{
									"key": "tags",
									"value": "tag1",
									"type": "text"
								},
								{
									"key": "tags",
									"value": "tag2",
									"type": "text"
								},
								{
									"key": "tags",
									"value": "tag3",
									"type": "text"
								},
								{
									"key": "allowedUsers",
									"value": "userId1",
									"type": "text"
								},
								{
									"key": "allowedUsers",
									"value": "userId2",
									"type": "text"
								},
								{
									"key": "allowedGroups",
									"value": "groupId1",
									"type": "text"
								},
								{
									"key": "allowedGroups",
									"value": "groupId2",
									"type": "text"
								},
								{
									"key": "lat",
									"value": "47.123",
									"type": "text"
								},
								{
									"key": "lon",
									"value": "20.123",
									"type": "text"
								},
								{
									"key": "backgroundType",
									"value": "0",
									"type": "text"
								},
								{
									"key": "contents",
									"type": "file",
									"src": "/C:/Users/Bruger/Pictures/New folder/5fb4e34a2ba65934fcda3891.jpg"
								},
								{
									"key": "contents",
									"type": "file",
									"src": "/C:/Users/Bruger/Pictures/New folder/5fb7fca1f5c05708e5200523.jpg"
								}
							]
						},
						"url": {
							"raw": "{{apiUrl}}/timeCapsule",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"timeCapsule"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit accessibility permissions",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"allowedUsers\": [\r\n        \"324\",\r\n        \"123test123\"\r\n    ],\r\n    \"allowedGroups\": [\r\n        \"ce e asta? :))\",\r\n        \"un grup\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apiUrl}}/timeCapsule/605caf2cd090f13eb01b6d5f",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"timeCapsule",
								"605caf2cd090f13eb01b6d5f"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get my time capsules",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/timeCapsule/my",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"timeCapsule",
								"my"
							]
						},
						"description": "If the time capsule is opened, the field `isOpened` is true, and the `contents` array is present.\r\n\r\nIf the time capsule is closed, the field `isOpened` is false, and the `contents` array is not present."
					},
					"response": []
				},
				{
					"name": "Delete time capsule",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/timeCapsule/delete/:id",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"timeCapsule",
								"delete",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get  timeCapsule by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/timeCapsule/:id",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"timeCapsule",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tag",
			"item": [
				{
					"name": "Get tag suggestions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/tag/suggestions/ta",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tag",
								"suggestions",
								"ta"
							]
						},
						"description": "{{apiUrl}}/tag/suggestions/`query`\r\n\r\nGets tag suggestions. The response is limited to 20 results."
					},
					"response": []
				},
				{
					"name": "Get all tags",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{apiUrl}}/tag/all",
							"host": [
								"{{apiUrl}}"
							],
							"path": [
								"tag",
								"all"
							]
						},
						"description": "Gets all tags. Preferably not to be used in the app, only for testing purposes :)"
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "otherUserid123",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "apiUrl",
			"value": "http://localhost:8080"
		}
	]
}